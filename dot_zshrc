export PATH=/usr/local/bin:$PATH
export PATH="/usr/local/sbin:$PATH"

export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"


#-------------------- Zinit --------------------#
### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk


#-------------------- Plugin --------------------#
# Syntax highlight
zinit light zsh-users/zsh-syntax-highlighting

# Add vi visual mode
zinit light b4b4r07/zsh-vimode-visual

# zinit ice wait'0' lucid blockf
zinit light zsh-users/zsh-autosuggestions

zinit ice wait'0' lucid blockf
zinit light zsh-users/zsh-completions
autoload -Uz compinit && compinit -u
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*:default' menu select=1


#-------------------- Theme --------------------#
eval "$(starship init zsh)"


#-------------------- tmux --------------------#
if [[ ! -n $TMUX ]]; then
    # get the IDs
    ID="`tmux list-sessions`"
    if [[ -z "$ID" ]]; then
        tmux new-session
    fi
    create_new_session="Create New Session"
    ID="$ID\n${create_new_session}:"
    ID="`echo $ID | fzf | cut -d: -f1`"
    if [[ "$ID" = "${create_new_session}" ]]; then
        tmux new-session
    elif [[ -n "$ID" ]]; then
        tmux attach-session -t "$ID"
    else
        :  # Start terminal normally
    fi
fi


#-------------------- asdf --------------------#
. /usr/local/opt/asdf/libexec/asdf.sh
export ASDF_PATH=$HOME/.asdf
export PATH="/Users/taigamat/.asdf/shims:$PATH"
# Solve conflict with homebrew 
alias brew="PATH=/usr/local/bin:/usr/bin:/bin:/user/local/sbin:/usr/sbin:/sbin brew"


#-------------------- LF --------------------#
# Set icons
source ~/.config/lf/icons
export EDITOR="nvim"
export VISUAL="nvim"
# Use lf to switch directories and bind it to ctrl-o
lfcd () {
    tmp="$(mktemp)"
    lf -last-dir-path="$tmp" "$@"
    if [ -f "$tmp" ]; then
        dir="$(cat "$tmp")"
        rm -f "$tmp"
        [ -d "$dir" ] && [ "$dir" != "$(pwd)" ] && cd "$dir"
    fi
}
bindkey -s '^o' 'lfcd\n'


#-------------------- GitUI --------------------#
bindkey -s '^g' 'gitui\n'


#-------------------- fzf --------------------#
export FZF_DEFAULT_OPTS="--height 50% --layout=reverse --border --inline-info --preview 'head -100 {}'"


#-------------------- Poetry --------------------#
export PATH="$HOME/.local/bin:$PATH"


#-------------------- Solana --------------------#
export PATH="/Users/taigamat/.local/share/solana/install/active_release/bin:$PATH"

#-------------------- ash --------------------#
export PATH="/Users/taigamat/.local/share/automated-security-helper:$PATH"


source /Users/taigamat/Library/Application\ Support/org.dystroy.broot/launcher/bash/br
